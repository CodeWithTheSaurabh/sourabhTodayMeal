{"ast":null,"code":"var _jsxFileName = \"/Users/sourabh/Downloads/meal-planner-in-react/src/App.js\",\n  _s = $RefreshSig$();\n// Import React and useState hook from the React library\nimport React, { useState } from \"react\";\n\n// Import MealList component from a separate file\nimport MealList from \"./MealList\";\n\n// Define the App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize state variables for meal data and calories\n  const [mealData, setMealData] = useState(null); // meal data is initially null\n  const [calories, setCalories] = useState(2000); // default calories is 2000\n  const [weight, setWeight] = useState(\"\"); // state for weight input\n  const [height, setHeight] = useState(\"\"); // state for height input\n\n  // Function to fetch meal data from the Spoonacular API\n  function getMealData() {\n    // Construct the API URL with the calories parameter\n    fetch(`https://api.spoonacular.com/mealplanner/generate?apiKey=cb1c464d94f142c08b156c5beddade8b&timeFrame=day&targetCalories=${calories}`)\n    // Parse the response as JSON\n    .then(response => response.json())\n    // Update the mealData state with the fetched data\n    .then(data => {\n      setMealData(data);\n    })\n    // Catch any errors and log them to the console\n    .catch(() => {\n      console.log(\"error\");\n    });\n  }\n\n  // Function to handle changes to the calories input field\n  function handleChange(e) {\n    // Update the calories state with the new value\n    setCalories(e.target.value);\n  }\n\n  // Functions to handle changes to weight and height inputs\n  function handleWeightChange(e) {\n    setWeight(e.target.value);\n  }\n  function handleHeightChange(e) {\n    setHeight(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Calories (e.g. 2000)\",\n        onChange: handleChange // call handleChange when input changes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Weight (kg)\",\n        value: weight,\n        onChange: handleWeightChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Height (cm)\",\n        value: height,\n        onChange: handleHeightChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMealData,\n        children: \"Get Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), mealData && /*#__PURE__*/_jsxDEV(MealList, {\n      mealData: mealData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n// Export the App component as the default export\n_s(App, \"Eq+tH46hiInU9SFjWTCHwCZpyjA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MealList","jsxDEV","_jsxDEV","App","_s","mealData","setMealData","calories","setCalories","weight","setWeight","height","setHeight","getMealData","fetch","then","response","json","data","catch","console","log","handleChange","e","target","value","handleWeightChange","handleHeightChange","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sourabh/Downloads/meal-planner-in-react/src/App.js"],"sourcesContent":["// Import React and useState hook from the React library\nimport React, { useState } from \"react\";\n\n// Import MealList component from a separate file\nimport MealList from \"./MealList\";\n\n// Define the App component\nfunction App() {\n  // Initialize state variables for meal data and calories\n  const [mealData, setMealData] = useState(null); // meal data is initially null\n  const [calories, setCalories] = useState(2000); // default calories is 2000\n  const [weight, setWeight] = useState(\"\"); // state for weight input\n  const [height, setHeight] = useState(\"\"); // state for height input\n\n  // Function to fetch meal data from the Spoonacular API\n  function getMealData() {\n    // Construct the API URL with the calories parameter\n    fetch(\n      `https://api.spoonacular.com/mealplanner/generate?apiKey=cb1c464d94f142c08b156c5beddade8b&timeFrame=day&targetCalories=${calories}`\n    )\n      // Parse the response as JSON\n      .then((response) => response.json())\n      // Update the mealData state with the fetched data\n      .then((data) => {\n        setMealData(data);\n      })\n      // Catch any errors and log them to the console\n      .catch(() => {\n        console.log(\"error\");\n      });\n  }\n\n  // Function to handle changes to the calories input field\n  function handleChange(e) {\n    // Update the calories state with the new value\n    setCalories(e.target.value);\n  }\n\n  // Functions to handle changes to weight and height inputs\n  function handleWeightChange(e) {\n    setWeight(e.target.value);\n  }\n\n  function handleHeightChange(e) {\n    setHeight(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <section className=\"controls\">\n        {/* Input field for calories */}\n        <input\n          type=\"number\"\n          placeholder=\"Calories (e.g. 2000)\"\n          onChange={handleChange} // call handleChange when input changes\n        />\n\n        {/* BMI calculator inputs */}\n        <input\n          type=\"number\"\n          placeholder=\"Weight (kg)\"\n          value={weight}\n          onChange={handleWeightChange}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Height (cm)\"\n          value={height}\n          onChange={handleHeightChange}\n        />\n\n        {/* Button to fetch meal data */}\n        <button onClick={getMealData}>Get Meal Plan</button>\n      </section>\n      \n      {/* Render MealList component only if mealData is not null */}\n      {mealData && <MealList mealData={mealData} />}\n    </div>\n  );\n}\n\n// Export the App component as the default export\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}