{"ast":null,"code":"var _jsxFileName = \"/Users/sourabh/Downloads/meal-planner-in-react/src/App.js\",\n  _s = $RefreshSig$();\n// Import React and useState hook from the React library\nimport React, { useState } from \"react\";\n\n// Import MealList component from a separate file\nimport MealList from \"./MealList\";\n\n// Define the App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize state variables for meal data, calories, weight, height, BMI, and suggested calories\n  const [mealData, setMealData] = useState(null); // meal data is initially null\n  const [calories, setCalories] = useState(2000); // default calories is 2000\n  const [weight, setWeight] = useState(\"\"); // state for weight input\n  const [height, setHeight] = useState(\"\"); // state for height input\n  const [bmi, setBmi] = useState(null); // state for calculated BMI\n  const [bmiResult, setBmiResult] = useState(\"\"); // state for BMI result message\n  const [suggestedCalories, setSuggestedCalories] = useState(null); // state for suggested calorie intake\n\n  // Function to fetch meal data from the Spoonacular API\n  function getMealData() {\n    // Construct the API URL with the calories parameter\n    fetch(`https://api.spoonacular.com/mealplanner/generate?apiKey=cb1c464d94f142c08b156c5beddade8b&timeFrame=day&targetCalories=${calories}`)\n    // Parse the response as JSON\n    .then(response => response.json())\n    // Update the mealData state with the fetched data\n    .then(data => {\n      setMealData(data);\n    })\n    // Catch any errors and log them to the console\n    .catch(() => {\n      console.log(\"error\");\n    });\n  }\n\n  // Function to handle changes to the calories input field\n  function handleCaloriesChange(e) {\n    setCalories(e.target.value);\n  }\n\n  // Functions to handle changes to weight and height inputs\n  function handleWeightChange(e) {\n    setWeight(e.target.value);\n  }\n  function handleHeightChange(e) {\n    setHeight(e.target.value);\n  }\n\n  // Function to calculate BMI based on weight and height\n  function calculateBMI() {\n    if (weight && height) {\n      const heightInMeters = height / 100; // Convert height to meters\n      const bmiValue = (weight / (heightInMeters * heightInMeters)).toFixed(2); // Calculate BMI and round to 2 decimal places\n      setBmi(bmiValue); // Update the BMI state with the calculated value\n\n      // Determine BMI category and suggested calorie intake\n      if (bmiValue < 18.5) {\n        setBmiResult(\"Underweight\");\n        setSuggestedCalories(2500); // Suggested higher calorie intake for weight gain\n      } else if (bmiValue >= 18.5 && bmiValue < 24.9) {\n        setBmiResult(\"Normal weight\");\n        setSuggestedCalories(2000); // Suggested moderate calorie intake for weight maintenance\n      } else if (bmiValue >= 25 && bmiValue < 29.9) {\n        setBmiResult(\"Overweight\");\n        setSuggestedCalories(1800); // Suggested lower calorie intake for gradual weight loss\n      } else {\n        setBmiResult(\"Obesity\");\n        setSuggestedCalories(1500); // Suggested calorie intake for more aggressive weight loss\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Calories (e.g. 2000)\",\n        value: calories,\n        onChange: handleCaloriesChange // call handleCaloriesChange when input changes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Weight (kg)\",\n        value: weight,\n        onChange: handleWeightChange // call handleWeightChange when input changes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Height (cm)\",\n        value: height,\n        onChange: handleHeightChange // call handleHeightChange when input changes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMealData,\n        children: \"Get Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateBMI,\n        children: \"Calculate BMI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), bmi && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your BMI: \", bmi]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"BMI Category: \", bmiResult]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Suggested Daily Calorie Intake: \", suggestedCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), mealData && /*#__PURE__*/_jsxDEV(MealList, {\n      mealData: mealData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n// Export the App component as the default export\n_s(App, \"p6p1Z358qKEs/TQK782xYcUcIwY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MealList","jsxDEV","_jsxDEV","App","_s","mealData","setMealData","calories","setCalories","weight","setWeight","height","setHeight","bmi","setBmi","bmiResult","setBmiResult","suggestedCalories","setSuggestedCalories","getMealData","fetch","then","response","json","data","catch","console","log","handleCaloriesChange","e","target","value","handleWeightChange","handleHeightChange","calculateBMI","heightInMeters","bmiValue","toFixed","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sourabh/Downloads/meal-planner-in-react/src/App.js"],"sourcesContent":["// Import React and useState hook from the React library\nimport React, { useState } from \"react\";\n\n// Import MealList component from a separate file\nimport MealList from \"./MealList\";\n\n// Define the App component\nfunction App() {\n  // Initialize state variables for meal data, calories, weight, height, BMI, and suggested calories\n  const [mealData, setMealData] = useState(null); // meal data is initially null\n  const [calories, setCalories] = useState(2000); // default calories is 2000\n  const [weight, setWeight] = useState(\"\"); // state for weight input\n  const [height, setHeight] = useState(\"\"); // state for height input\n  const [bmi, setBmi] = useState(null); // state for calculated BMI\n  const [bmiResult, setBmiResult] = useState(\"\"); // state for BMI result message\n  const [suggestedCalories, setSuggestedCalories] = useState(null); // state for suggested calorie intake\n\n  // Function to fetch meal data from the Spoonacular API\n  function getMealData() {\n    // Construct the API URL with the calories parameter\n    fetch(\n      `https://api.spoonacular.com/mealplanner/generate?apiKey=cb1c464d94f142c08b156c5beddade8b&timeFrame=day&targetCalories=${calories}`\n    )\n      // Parse the response as JSON\n      .then((response) => response.json())\n      // Update the mealData state with the fetched data\n      .then((data) => {\n        setMealData(data);\n      })\n      // Catch any errors and log them to the console\n      .catch(() => {\n        console.log(\"error\");\n      });\n  }\n\n  // Function to handle changes to the calories input field\n  function handleCaloriesChange(e) {\n    setCalories(e.target.value);\n  }\n\n  // Functions to handle changes to weight and height inputs\n  function handleWeightChange(e) {\n    setWeight(e.target.value);\n  }\n\n  function handleHeightChange(e) {\n    setHeight(e.target.value);\n  }\n\n  // Function to calculate BMI based on weight and height\n  function calculateBMI() {\n    if (weight && height) {\n      const heightInMeters = height / 100; // Convert height to meters\n      const bmiValue = (weight / (heightInMeters * heightInMeters)).toFixed(2); // Calculate BMI and round to 2 decimal places\n      setBmi(bmiValue); // Update the BMI state with the calculated value\n\n      // Determine BMI category and suggested calorie intake\n      if (bmiValue < 18.5) {\n        setBmiResult(\"Underweight\");\n        setSuggestedCalories(2500); // Suggested higher calorie intake for weight gain\n      } else if (bmiValue >= 18.5 && bmiValue < 24.9) {\n        setBmiResult(\"Normal weight\");\n        setSuggestedCalories(2000); // Suggested moderate calorie intake for weight maintenance\n      } else if (bmiValue >= 25 && bmiValue < 29.9) {\n        setBmiResult(\"Overweight\");\n        setSuggestedCalories(1800); // Suggested lower calorie intake for gradual weight loss\n      } else {\n        setBmiResult(\"Obesity\");\n        setSuggestedCalories(1500); // Suggested calorie intake for more aggressive weight loss\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <section className=\"controls\">\n        {/* Input field for calories */}\n        <input\n          type=\"number\"\n          placeholder=\"Calories (e.g. 2000)\"\n          value={calories}\n          onChange={handleCaloriesChange} // call handleCaloriesChange when input changes\n        />\n\n        {/* BMI calculator inputs */}\n        <input\n          type=\"number\"\n          placeholder=\"Weight (kg)\"\n          value={weight}\n          onChange={handleWeightChange} // call handleWeightChange when input changes\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Height (cm)\"\n          value={height}\n          onChange={handleHeightChange} // call handleHeightChange when input changes\n        />\n\n        {/* Button to fetch meal data */}\n        <button onClick={getMealData}>Get Meal Plan</button>\n\n        {/* Button to calculate BMI */}\n        <button onClick={calculateBMI}>Calculate BMI</button>\n      </section>\n\n      {/* Display the calculated BMI, BMI category, and suggested calorie intake */}\n      {bmi && (\n        <div>\n          <h2>Your BMI: {bmi}</h2>\n          <p>BMI Category: {bmiResult}</p>\n          <p>Suggested Daily Calorie Intake: {suggestedCalories} kcal</p>\n        </div>\n      )}\n\n      {/* Render MealList component only if mealData is not null */}\n      {mealData && <MealList mealData={mealData} />}\n    </div>\n  );\n}\n\n// Export the App component as the default export\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}